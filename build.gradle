plugins {
    id 'groovy'
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'war'
}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

group 'com.storm.score'
version '1.0-SNAPSHOT'
sourceCompatibility = '17'

// git submodule 내부에 application.yml 파일 카피를 위한 Gradle Task
tasks.register('copyYML', Copy) {
    copy {
        from './storm_score_sub/src'
        include '*.yml'
        into './src/main/resources'
    }
}
// Gradle Build 시 해당 Task를 실행
project.defaultTasks "copyYML"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.codehaus.groovy:groovy-all:3.0.9'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    //lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    //spring boot lib
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //web socket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    //validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //SpringDoc
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    //logback
//    implementation 'ch.qos.logback:logback-core:1.2.9'
//    testImplementation 'ch.qos.logback:logback-classic:1.2.9'

    // spring security
    implementation 'org.springframework.boot:spring-boot-starter-security:3.1.5'

    // jwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    // NoClassDefFOundError
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'com.sun.xml.bind:jaxb-core:2.3.0.1'
    implementation 'com.sun.xml.bind:jaxb-impl:2.3.2'

    //Swagger
    implementation 'io.springfox:springfox-swagger2:3.0.0'
    implementation 'io.swagger.core.v3:swagger-annotations-jakarta'

    //SpringDoc
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    //mariaDB
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.3.3'

    //querydsl
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.1.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    implementation 'org.apache.tika:tika-core:2.4.1'

    //mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'
}

test {
    useJUnitPlatform()
}

// QueryDsl 관련
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDirs += [querydslDir]
}

tasks.withType(JavaCompile).configureEach {
    //noinspection GroovyAssignabilityCheck, GroovyAccessibility
    options.generatedSourceOutputDirectory = file(querydslDir)
}

clean.doLast {
    file(querydslDir).deleteDir()
}
